# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Unit Tests

on:
  pull_request:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  schedule:
    # Run the job every 12 hours
    - cron:  '0 */12 * * *'

jobs:
  py:
    name: "Python type/lint/format checks"
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: ['3.10']
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: make install-deps
    - name: Typecheck the code with pytype
      run: make type-check
    - name: Analysing the code with pylint
      run: make linter-check
    - name: Format check with pyink
      run: make format-check

  cpu:
    name: "JetStream unit tests"
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: ['3.10']
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        make install-deps 
        make install-submodules
    - name: Run all unit tests in JetStream (jetstream/tests)
      run: make unit-tests
    - name: Create test coverage report
      run: make check-test-coverage